{"version":3,"sources":["AssisrStarQuiz/Services/HttpService.ts","AssisrStarQuiz/Services/CharacterService.ts","AssisrStarQuiz/Services/ImageSearchService.ts","AssisrStarQuiz/Contexts/QuizContext.ts","AssisrStarQuiz/Services/RankService.ts","AssisrStarQuiz/Components/UI/Button/Button.tsx","AssisrStarQuiz/Static/Svg/darth.svg","AssisrStarQuiz/Components/UI/Header/Header.tsx","AssisrStarQuiz/Components/Pages/Menu/Menu.tsx","AssisrStarQuiz/Components/UI/Loader/Loader.tsx","AssisrStarQuiz/Components/UI/Modal/Modal.tsx","AssisrStarQuiz/Components/Elements/AsyncImage/AsyncImage.tsx","AssisrStarQuiz/Components/Elements/CharacterTip/CharacterTip.tsx","AssisrStarQuiz/Components/Elements/Character/Character.tsx","AssisrStarQuiz/Components/Elements/Counter/Counter.tsx","AssisrStarQuiz/Components/Elements/Finished/Finished.tsx","AssisrStarQuiz/Components/Pages/Quiz/Quiz.tsx","AssisrStarQuiz/AssisrStarQuiz.tsx","App.tsx","index.tsx"],"names":["HttpService","url","options","fetch","response","ok","json","undefined","CharacterService","http","cachedCharacterPages","Array","cachedSpecies","cachedPlanets","cachedFilms","cachedVehicles","page","limit","this","people","get","concat","swApi","next","characters","results","previousPage","previous","nextPage","character","species","fetchSingleCached","x","specie","name","homeworld","planet","fetchMultipleCached","films","y","film","title","movies","join","vehicles","vehicle","cache","findInCache","selectProperty","cachedEntity","find","entity","push","urls","entitiesReturnPredicate","entities","length","promises","forEach","promise","_this","value","Promise","all","ImageSearchService","Object","classCallCheck","cachedSearches","localSearches","localStorage","getItem","JSON","parse","q","result","link","getLink","Math","random","searchOnBing","searchOnGoogle","setItem","stringify","search","googleImages","googleImagesContext","googleImagesApiKey","encodeURIComponent","items","floor","bingImages","headers","Ocp-Apim-Subscription-Key","bingSubscriptionKey","contentUrl","resolve","reject","setTimeout","asyncToGenerator","regenerator_default","a","mark","_callee4","wrap","_context4","prev","t0","t1","sent","stop","quiz","characterService","imageSearchService","QuizContext","React","createContext","RankService","rank","ranks","getRanks","ranksStorage","Button","props","possibleConstructorReturn","getPrototypeOf","call","react_default","createElement","react_router_dom","className","to","children","type","onClick","bind","disabled","event","Component","_extends","assign","target","i","arguments","source","key","prototype","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","darth_ref2","id","_ref3","height","width","patternUnits","darth_SvgDarth","_ref","svgRef","ref","d","style","fill","fillRule","fillOpacity","stroke","ForwardRef","forwardRef","Header","__webpack_require__","p","vertical","scale","Menu","context","preChache","Header_Header_Header","getRanking","Button_Button_Button","ranking","sort","b","score","map","email","_ref2","_callee2","splittedName","_context2","split","query","_x","contextType","Loader","Modal","onClose","AsyncImage","state","loaded","_this2","image","Image","onload","setState","src","getAsyncImage","img","loader","CharacterTip","fillSpecieName","fillPlanetName","fillFilmNames","fillVehicleNames","imageComponent","specieName","Loader_Loader_Loader","hair_color","planetName","filmNames","vehicleNames","Character","isModalOpenned","characterImage","multiplier","scoreValue","correct","nameInput","getImageUrl","getImage","placeholder","onChange","onInputChange","fake","openTip","Modal_Modal_Modal","closeTip","getTip","imageUrl","AsyncImage_AsyncImage_AsyncImage","CharacterTip_CharacterTip_CharacterTip","processString","str","trim","toLocaleLowerCase","replace","onScore","_this$state","console","error","Counter","time","totalSeconds","interval","setInterval","tickCounter","data-glyph","aria-hidden","duration","moment","asSeconds","limitInSeconds","clearInterval","onLimit","minutes","seconds","Finished","validation","valid","errors","dirty","getPreviousRank","onSubmit","getErrors","updateForm","e","objectSpread","defineProperty","validate","match","preventDefault","Quiz","correctCharacters","currentPage","totalScore","finished","loadPage","Counter_Counter_Counter","countdownLimitInSeconds","timerFinished","getCharacters","Finished_Finished_Finished","rankSubmit","charElement","char","Character_Character_Character","some","onCorrectName","index","toString","toConsumableArray","insertRank","history","AssisrStarQuiz","quizContext","audio","document","getElementById","volume","play","Provider","basename","process","react_router","path","exact","component","autoPlay","loop","App","Fragment","AssisrStarQuiz_AssisrStarQuiz_AssisrStarQuiz","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.6a45b31b.chunk.js","sourcesContent":["export default class HttpService {\r\n    public async get<T>(url: string, options?: any): Promise<T | undefined> {\r\n        const response = await fetch(url, options);\r\n        if (response && response.ok) {\r\n            return await response.json();\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n}\r\n","import { swApi } from \"../Config.json\";\r\nimport { ICharacter } from \"../Interfaces/ICharacter\";\r\nimport { IFilm } from \"../Interfaces/IFilm.js\";\r\nimport { IPeople } from \"../Interfaces/IPeople\";\r\nimport { IPlanet } from \"../Interfaces/IPlanet.js\";\r\nimport { ISpecie } from \"../Interfaces/ISpecie.js\";\r\nimport { IVehicle } from \"../Interfaces/IVehicle.js\";\r\nimport HttpService from \"./HttpService\";\r\n\r\nexport interface IListResult {\r\n    characters?: ICharacter[];\r\n    previousPage?: boolean;\r\n    nextPage?: boolean;\r\n}\r\n\r\nexport default class CharacterService {\r\n    private http = new HttpService();\r\n    private cachedCharacterPages = new Array<IPeople>();\r\n    private cachedSpecies = new Array<ISpecie>();\r\n    private cachedPlanets = new Array<IPlanet>();\r\n    private cachedFilms = new Array<IFilm>();\r\n\r\n    private cachedVehicles = new Array<IVehicle>();\r\n\r\n    /// Returns a list of charaters and if there's previous or next page\r\n    public async characters(page: number = 0, limit: boolean = false): Promise<IListResult> {\r\n        let people: IPeople | undefined;\r\n\r\n        // Find if this page was loaded already\r\n        if (this.cachedCharacterPages && this.cachedCharacterPages[page]) {\r\n            people = this.cachedCharacterPages[page];\r\n        } else {\r\n            // If not, load the page\r\n            people = await this.http.get<IPeople>(`${swApi}/people?page=${page + 1}`);\r\n\r\n            if (people) {\r\n                // Cache it\r\n                this.cachedCharacterPages[page] = people;\r\n            }\r\n        }\r\n\r\n        if (!limit && people && people.next) {\r\n            // Fire and forget: find and cache next page for faster paging\r\n            this.characters(page + 1, true);\r\n        }\r\n\r\n        // Then return it\r\n        return {\r\n            characters: people ? people.results : undefined,\r\n            previousPage: people ? (people.previous ? true : false) : undefined,\r\n            nextPage: people ? (people.next ? true : false) : undefined,\r\n        };\r\n    }\r\n\r\n    /// Returns a specific character's specie\r\n    public async specie(character: ICharacter | undefined): Promise<string | undefined> {\r\n        if (character && character.species && character.species[0]) {\r\n            const url = character.species[0];\r\n            return await this.fetchSingleCached<ISpecie, string>(url,\r\n                this.cachedSpecies,\r\n                (x) => x.url === url, // The check to execute to see if it's cachec\r\n                (specie) => specie ? specie.name : undefined); // The return predicate to select which property to return\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    /// Returns a specific character's planet\r\n    public async planet(character: ICharacter | undefined): Promise<string | undefined> {\r\n        if (character) {\r\n            const url = character.homeworld;\r\n            return await this.fetchSingleCached<IPlanet, string>(url,\r\n                this.cachedPlanets,\r\n                (x) => x.url === url,\r\n                (planet) => planet ? planet.name : undefined);\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    /// Returns a specific character's set of movies\r\n    public async films(character: ICharacter | undefined): Promise<string | undefined> {\r\n        if (character) {\r\n            return await this.fetchMultipleCached(character.films,\r\n                this.cachedFilms,\r\n                (x, y) => x.url === y,\r\n                (film) => film ? film.title : undefined,\r\n                (movies) => movies.join(\", \"));\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    /// Returns a specific character's set of vehicles\r\n    public async vehicles(character: ICharacter | undefined): Promise<string | undefined> {\r\n        if (character) {\r\n            return await this.fetchMultipleCached(character.vehicles,\r\n                this.cachedVehicles,\r\n                (x, y) => x.url === y,\r\n                (vehicle) => vehicle ? vehicle.name : undefined,\r\n                (vehicles) => vehicles.join(\", \"));\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    private async fetchSingleCached<T, Y>(\r\n        url: string | undefined,  // The url to get the entity from\r\n        cache: T[], // The cache to check if the entity exists\r\n        findInCache: (value: T) => boolean, // The function to use to check if the entity exists on the cache\r\n        selectProperty: (value: T | undefined) => Y | undefined, // The function to select which property should return\r\n    ): Promise<Y | undefined> {\r\n        // Define generic entity\r\n        let entity: T | undefined;\r\n\r\n        if (url) {\r\n            // If entity is cached\r\n            const cachedEntity = cache.find(findInCache);\r\n            if (cachedEntity) {\r\n                entity = cachedEntity;\r\n            } else {\r\n                // If not cached, get\r\n                entity = await this.http.get<T>(url);\r\n                if (entity) {\r\n                    // Then cache\r\n                    cache.push(entity);\r\n                }\r\n            }\r\n        }\r\n\r\n        // After cached, return\r\n        return selectProperty(entity);\r\n    }\r\n\r\n    private async fetchMultipleCached<T, Y>(\r\n        urls: string[] | undefined, // Urls to get multiple entities from\r\n        cache: T[], // The cache to check if the entity exists\r\n        findInCache: (valuePredicate: T, valueIteration: string) => boolean, // Predicate to check if the entity exists on the cache\r\n        selectProperty: (value: T | undefined) => Y | undefined, // The function to select which property should return\r\n        entitiesReturnPredicate: (value: Array<Y | undefined>, // The function to manipulate multiple propertis that have returned\r\n        ) => Y | undefined): Promise<Y | undefined> {\r\n        let entities = new Array<Y | undefined>();\r\n\r\n        if (urls && urls.length > 0) {\r\n            const promises = new Array<Promise<Y | undefined>>();\r\n            // For each url\r\n            urls.forEach((url) => {\r\n                if (url) {\r\n                    // Make a promise to fetch a single url\r\n                    const promise = this.fetchSingleCached<T, Y>(url,\r\n                        cache,\r\n                        (value) => findInCache(value, url),\r\n                        selectProperty);\r\n\r\n                    // Store the promise(not the result)\r\n                    promises.push(promise);\r\n                }\r\n            });\r\n\r\n            // Run all promises in parallel\r\n            entities = await Promise.all(promises);\r\n        }\r\n\r\n        return entitiesReturnPredicate(entities);\r\n    }\r\n}\r\n","import { bingImages, googleImages } from \"../Config.json\";\r\nimport { bingSubscriptionKey, googleImagesApiKey, googleImagesContext } from \"../Credentials.json\";\r\nimport HttpService from \"./HttpService\";\r\n\r\nexport default class ImageSearchService {\r\n    private http = new HttpService();\r\n\r\n    private cachedSearches: any[];\r\n\r\n    constructor() {\r\n        // I store the searches on the local storage since google has a pretty strict query limit\r\n        const localSearches = localStorage.getItem(\"searches\");\r\n        if (localSearches) {\r\n            this.cachedSearches = (new Array(JSON.parse(localSearches)))[0];\r\n        } else {\r\n            this.cachedSearches = new Array();\r\n        }\r\n    }\r\n\r\n    public async query(q: string): Promise<string | undefined> {\r\n        let link: any | undefined;\r\n\r\n        // Check if this search is cached\r\n        if (this.cachedSearches && this.cachedSearches.length > 0) {\r\n            const result = this.cachedSearches.find((x: any) => x.q === q);\r\n            if (result) {\r\n                link = result.link;\r\n            } else {\r\n                // If not cached, search\r\n                link = await this.getLink(q);\r\n            }\r\n        } else {\r\n            // If not cached, search\r\n            link = await this.getLink(q);\r\n        }\r\n\r\n        return link;\r\n    }\r\n    public async getLink(q: string): Promise<string | undefined> {\r\n        let link: string | undefined;\r\n\r\n        // Randomly choose if should search on bing\r\n        // Bing has better results, but has harsh request limit so I only choose it sometimes\r\n        if (Math.random() > 0.7) {\r\n            link = await this.searchOnBing(q);\r\n        }\r\n\r\n        if (!link) {\r\n            link = await this.searchOnGoogle(q);\r\n\r\n            // If google search failed, fallback to bing\r\n            if (!link) {\r\n                link = await this.searchOnBing(q);\r\n            }\r\n        }\r\n\r\n        // If there's a result(it may not have =( ), cache it\r\n        if (link) {\r\n            this.cachedSearches.push({ q, link });\r\n            localStorage.setItem(\"searches\", JSON.stringify(this.cachedSearches));\r\n        }\r\n\r\n        return link;\r\n    }\r\n\r\n    private async searchOnGoogle(q: string): Promise<string | undefined> {\r\n        let link: string | undefined;\r\n\r\n        const search =\r\n            `${googleImages}?cx=${googleImagesContext}&key=${googleImagesApiKey}&searchType=image&q=${encodeURIComponent(q)}&imgType=photo`;\r\n\r\n        const result = await this.http.get<any>(search);\r\n        if (result && result.items) {\r\n            link = result.items.length === 0\r\n                ? result.items[0].link\r\n                : result.items[Math.floor(Math.random() * (2 - 0 + 1) + 0)].link; // Randomize between first 3 numbers\r\n        }\r\n\r\n        return link;\r\n    }\r\n\r\n    private async searchOnBing(q: string): Promise<string | undefined> {\r\n        let link: string | undefined;\r\n\r\n        const search =\r\n            `${bingImages}?q=${encodeURIComponent(q)}&count=1`;\r\n\r\n        try {\r\n            const result = await this.http.get<any>(search, {\r\n                headers: {\r\n                    \"Ocp-Apim-Subscription-Key\": bingSubscriptionKey,\r\n                },\r\n            });\r\n\r\n            if (result && result.value) {\r\n                link = result.value.length === 0\r\n                    ? result.value[0].contentUrl\r\n                    : result.value[Math.floor(Math.random() * (2 - 0 + 1) + 0)].contentUrl; // Randomize between first 3 numbers\r\n            }\r\n\r\n            return link;\r\n        } catch {\r\n            // If bing returns \"too many requests\"\r\n            // Try again in 1 to 2 seconds\r\n            return new Promise((resolve, reject) => {\r\n                setTimeout(async () => {\r\n                    resolve(await this.searchOnBing(q));\r\n                }, Math.random() * (2000 - 1000 + 1) + 1000);\r\n            });\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport CharacterService from \"../Services/CharacterService\";\r\nimport ImageSearchService from \"../Services/ImageSearchService\";\r\n\r\nexport interface IQuizContext {\r\n    characterService?: CharacterService;\r\n    imageSearchService?: ImageSearchService;\r\n}\r\n\r\nexport const quiz: IQuizContext = {\r\n    characterService: new CharacterService(),\r\n    imageSearchService: new ImageSearchService(),\r\n};\r\n\r\nexport const QuizContext = React.createContext(quiz);\r\n","import IRank from \"../Interfaces/IRank\";\r\n\r\nexport default class RankService {\r\n    public static insertRank(rank: IRank) {\r\n        const ranks = this.getRanks();\r\n        ranks.push(rank);\r\n        localStorage.setItem(\"ranks\", JSON.stringify(ranks));\r\n    }\r\n\r\n    public static getRanks(): IRank[] {\r\n        const ranksStorage = localStorage.getItem(\"ranks\");\r\n        if (ranksStorage) {\r\n            return new Array(JSON.parse(ranksStorage))[0];\r\n        } else {\r\n            return new Array<IRank>();\r\n        }\r\n    }\r\n\r\n    public static getPreviousRank(): IRank | undefined {\r\n        const ranks = this.getRanks();\r\n\r\n        if (ranks && ranks.length > 0) {\r\n            return ranks[ranks.length - 1];\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Button.scss\";\r\n\r\ninterface IButtonProps {\r\n    onClick?: (event: React.MouseEvent) => void;\r\n    link?: string;\r\n    disabled?: boolean;\r\n    type?: string;\r\n}\r\n\r\nexport default class Button extends React.Component<IButtonProps> {\r\n    constructor(props: IButtonProps) {\r\n        super(props);\r\n    }\r\n\r\n    public render() {\r\n        if (this.props.link) {\r\n            return (\r\n                <Link className={`ui-button`} to={this.props.link}>\r\n                    {this.props.children}\r\n                </Link>\r\n            );\r\n        } else {\r\n            return (\r\n                <button className={`ui-button`} type={this.props.type} onClick={this.onClick.bind(this)} disabled={this.props.disabled}>\r\n                    {this.props.children}\r\n                </button>\r\n            );\r\n        }\r\n    }\r\n\r\n    private onClick(event: React.MouseEvent): void {\r\n        if (this.props.onClick) {\r\n            this.props.onClick(event);\r\n        }\r\n    }\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"metadata\", {\n  id: \"metadata11\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"defs\", {\n  id: \"defs3\"\n}, React.createElement(\"pattern\", {\n  y: 0,\n  x: 0,\n  height: 6,\n  width: 6,\n  patternUnits: \"userSpaceOnUse\",\n  id: \"EMFhbasepattern\"\n}));\n\nvar SvgDarth = function SvgDarth(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"svg7\",\n    height: \"30.309999mm\",\n    width: \"30.290001mm\",\n    ref: svgRef\n  }, props), _ref2, _ref3, React.createElement(\"path\", {\n    id: \"path5\",\n    d: \" M 80.226296,94.746576 C 78.687326,94.746576 77.448155,95.985746 77.448155,97.524716 C 77.448155,99.053692 78.687326,100.29286 80.226296,100.29286 C 81.755272,100.29286 82.994443,99.053692 82.994443,97.524716 C 82.994443,95.985746 81.755272,94.746576 80.226296,94.746576 z M 32.987918,94.746576 C 31.458941,94.746576 30.219771,95.985746 30.219771,97.524716 C 30.219771,99.053692 31.458941,100.29286 32.987918,100.29286 C 34.526887,100.29286 35.766058,99.053692 35.766058,97.524716 C 35.766058,95.985746 34.526887,94.746576 32.987918,94.746576 z M 67.484825,85.272917 L 67.484825,97.694602 L 73.031112,97.694602 L 73.031112,87.761252 z M 45.729388,85.272917 L 40.183101,87.761252 L 40.183101,97.694602 L 45.729388,97.694602 z M 57.861267,81.23562 L 57.861267,97.694602 L 63.407554,97.694602 L 63.407554,81.23562 z M 49.806659,81.23562 L 49.806659,97.694602 L 55.352946,97.694602 L 55.352946,81.23562 z M 56.60211,64.606752 L 54.123769,65.11641 C 51.845294,66.115741 50.236371,68.464169 50.236371,71.18235 L 50.236371,77.767941 L 56.60211,77.767941 L 56.60211,77.767941 L 62.977842,77.767941 L 62.977842,71.18235 C 62.977842,68.464169 61.368919,66.115741 59.080451,65.11641 z M 67.304945,45.119796 L 67.304945,45.139783 L 66.935193,45.139783 L 65.496156,45.419596 L 65.226337,45.419596 L 65.226337,45.479556 L 64.246992,45.679422 C 61.768651,46.728719 60.029815,49.17708 60.029815,52.035167 L 60.029815,54.403582 L 60.049802,54.453548 L 60.049802,54.793321 L 60.029815,54.883261 L 60.029815,58.191046 L 60.779314,59.969856 C 61.608758,60.7993 62.757989,61.308959 64.017146,61.308959 L 66.935193,61.308959 L 70.193012,61.308959 L 80.436155,61.308959 C 81.705306,61.308959 82.854536,60.7993 83.683981,59.969856 L 84.733279,57.471528 L 84.733279,56.352277 L 84.023754,52.884599 C 82.56473,49.466886 79.646684,46.818659 76.039099,45.709402 L 74.909855,45.539515 L 74.909855,45.419596 L 74.160356,45.419596 L 72.4515,45.169763 L 72.4515,45.119796 z M 40.762713,45.119796 L 40.762713,45.169763 L 39.053857,45.419596 L 38.304359,45.419596 L 38.304359,45.539515 L 37.175115,45.709402 C 33.56753,46.818659 30.649483,49.466886 29.19046,52.884599 L 28.480935,56.352277 L 28.480935,57.471528 L 29.530232,59.969856 C 30.359677,60.7993 31.508908,61.308959 32.778058,61.308959 L 43.021201,61.308959 L 46.27902,61.308959 L 49.197067,61.308959 C 50.456224,61.308959 51.605455,60.7993 52.4349,59.969856 L 53.184398,58.191046 L 53.184398,54.883261 L 53.164411,54.793321 L 53.164411,54.453548 L 53.184398,54.403582 L 53.184398,52.035167 C 53.184398,49.17708 51.445562,46.728719 48.967221,45.679422 L 47.987876,45.479556 L 47.987876,45.419596 L 47.718057,45.419596 L 46.27902,45.139783 L 45.909268,45.139783 L 45.909268,45.119796 z M 40.462914,34.446941 C 35.146473,34.446941 30.329697,36.605496 26.852025,40.083168 L 23.644172,44.839984 L 23.39434,45.09981 L 23.294406,45.369629 L 23.164493,45.539515 L 22.534915,47.158432 L 22.474955,47.418258 L 6.375732,88.210951 C 5.9360264,89.330201 6.4856584,90.599352 7.6049092,91.039058 C 8.1645346,91.25891 8.7641332,91.238924 9.273792,91.009078 L 10.063264,90.209613 L 27.41165,46.24904 L 27.451624,46.259034 L 27.451624,46.159101 L 29.650152,42.891288 C 32.418299,40.123141 36.245737,38.414285 40.462914,38.414285 C 42.571502,38.414285 44.580158,38.843997 46.418927,39.613482 L 50.146431,42.131797 L 50.176411,42.131797 L 50.276345,42.341656 C 51.275676,43.211074 52.564813,43.830659 54.013843,44.090485 L 54.683394,44.150445 L 55.053147,44.220398 C 55.522832,44.270365 56.022498,44.300345 56.54215,44.300345 L 56.60211,44.300345 L 56.60211,44.300345 L 56.60211,44.300345 L 56.60211,44.300345 L 56.60211,44.300345 L 56.672063,44.300345 C 57.191715,44.300345 57.691381,44.270365 58.161066,44.220398 L 58.530819,44.150445 L 59.200371,44.090485 C 60.649401,43.830659 61.938538,43.211074 62.937869,42.341656 L 63.037802,42.131797 L 63.067782,42.131797 L 66.795287,39.613482 C 68.624062,38.843997 70.642711,38.414285 72.7513,38.414285 C 76.968477,38.414285 80.795914,40.123141 83.554068,42.891288 L 85.76259,46.159101 L 85.76259,46.259034 L 85.802563,46.24904 L 103.15095,90.209613 L 103.94042,91.009078 C 104.45008,91.238924 105.04968,91.25891 105.6093,91.039058 C 106.72855,90.599352 107.27819,89.330201 106.83848,88.210951 L 90.739258,47.418258 L 90.679298,47.158432 L 90.04972,45.539515 L 89.919807,45.369629 L 89.819874,45.09981 L 89.570041,44.839984 L 86.362188,40.083168 C 82.874523,36.605496 78.067741,34.446941 72.7513,34.446941 C 67.434858,34.446941 62.618083,36.605496 59.140411,40.083168 L 58.890578,40.45292 L 58.750672,40.7827 L 58.630752,40.832666 L 58.470859,41.072506 L 58.350939,41.112479 L 58.23102,41.262379 C 58.02116,41.432265 57.781321,41.582164 57.501508,41.672104 L 56.60211,41.831997 L 56.60211,41.831997 L 56.60211,41.831997 L 56.60211,41.831997 L 56.60211,41.831997 L 55.712705,41.672104 C 55.432893,41.582164 55.193053,41.432265 54.983194,41.262379 L 54.863274,41.112479 L 54.743354,41.072506 L 54.583461,40.832666 L 54.463542,40.7827 L 54.323635,40.45292 L 54.073802,40.083168 C 50.59613,36.605496 45.779355,34.446941 40.462914,34.446941 z M 46.828652,0.079946483 L 47.548171,0.079946483 L 56.60211,0.079946483 L 56.60211,0.079946483 L 65.666042,0.079946483 L 66.385561,0.079946483 L 66.385561,0.15989297 L 71.891875,0.70952504 C 85.093038,3.4177121 95.236248,14.530273 96.455432,28.211115 L 96.565358,30.719436 L 96.575351,30.719436 L 96.575351,39.643462 L 96.575351,39.643462 L 96.575351,47.228385 L 107.42809,74.969814 L 107.41809,74.969814 L 107.73788,75.769279 L 109.15693,79.376864 L 109.2069,79.456811 L 113.12427,89.310215 L 112.91441,90.409479 L 112.17491,93.577358 C 107.21823,104.1203 86.811887,112.22488 61.688705,113.19423 L 56.60211,113.28417 L 56.60211,113.28417 L 56.60211,113.28417 L 56.60211,113.28417 L 56.60211,113.28417 L 51.525508,113.19423 C 26.402326,112.22488 5.9959862,104.1203 1.0393043,93.577358 L 0.29979931,90.409479 L 0.079946483,89.310215 L 4.0073175,79.456811 L 4.057284,79.376864 L 5.4763341,75.769279 L 5.79612,74.969814 L 5.7861267,74.969814 L 16.638862,47.228385 L 16.638862,39.643462 L 16.638862,39.643462 L 16.638862,30.719436 L 16.648855,30.719436 L 16.758782,28.211115 C 17.977965,14.530273 28.111182,3.4177121 41.322338,0.70952504 L 46.828652,0.15989297 z \",\n    style: {\n      fill: \"#000000\",\n      fillRule: \"evenodd\",\n      fillOpacity: 1,\n      stroke: \"none\"\n    }\n  }));\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgDarth, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/darth.8ad90b21.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport { ReactComponent as DarthSVG } from \"./../../../Static/Svg/darth.svg\";\r\nimport \"./Header.scss\";\r\n\r\ninterface IHeaderProps {\r\n    scale?: boolean;\r\n    vertical?: boolean;\r\n}\r\n\r\nexport default class Header extends React.Component<IHeaderProps> {\r\n    constructor(props: IHeaderProps) {\r\n        super(props);\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className={`ui-header ${this.props.vertical ? \"vertical\" : \"\"}`}>\r\n                <DarthSVG className={this.props.scale ? \"scaled\" : \"\"} />\r\n                <h1 className={`font-starJediSe ${!this.props.vertical ? \"horizontal\" : \"\"}`}>Star quiz</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { QuizContext } from \"../../../Contexts/QuizContext\";\r\nimport { ICharacter } from \"../../../Interfaces/ICharacter\";\r\nimport RankService from \"../../../Services/RankService\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport Header from \"../../UI/Header/Header\";\r\nimport \"./Menu.scss\";\r\n\r\ninterface IMenuProps {\r\n}\r\n\r\nexport default class Menu extends React.Component<IMenuProps> {\r\n    public static contextType = QuizContext;\r\n    public context!: React.ContextType<typeof QuizContext>;\r\n\r\n    constructor(props: IMenuProps) {\r\n        super(props);\r\n    }\r\n\r\n    public async componentDidMount() {\r\n        await this.preChache();\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className={`elem-menu`}>\r\n                <Header vertical={true} scale={true} />\r\n                <div>\r\n                    <p>Do you like star wars? Test yourself with this quiz!</p>\r\n                    <ul>\r\n                        <p>You have 2 minutes to correctly answer character names from star wars</p>\r\n                        <li>Score 10 points if you answer without reading the tip</li>\r\n                        <li>Score 5 points if you answer with the tip</li>\r\n                    </ul>\r\n                </div>\r\n                {this.getRanking()}\r\n                <Button link=\"/quiz\">Start Game!</Button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getRanking(): React.ReactNode {\r\n        let ranking = RankService.getRanks();\r\n        ranking = ranking.sort((a, b) => (b.score ? b.score : 0) - (a.score ? a.score : 0));\r\n        if (ranking && ranking.length > 0) {\r\n            const ranks = () => ranking.map((rank, key) => <li key={key}>{rank.score}: {rank.name} - {rank.email}</li>);\r\n            return (\r\n                <div>\r\n                    <p>Local ranking:</p>\r\n                    <ol>\r\n                        {ranks()}\r\n                    </ol>\r\n                </div>\r\n            );\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    private async preChache() {\r\n        // I'm loading characters on the menu so it caches\r\n        // before the user start playing the game\r\n        const { characterService, imageSearchService } = this.context;\r\n        if (characterService && imageSearchService) {\r\n            const { characters } = await characterService.characters();\r\n            if (characters) {\r\n                characters.forEach(async (character: ICharacter) => {\r\n                    if (character && character.name) {\r\n                        const splittedName = character.name.split(\" \");\r\n                        const name = splittedName.length === 1\r\n                            ? splittedName[0]\r\n                            : splittedName[0] + \" \" + splittedName[splittedName.length - 1];\r\n                        await imageSearchService.query(`${name} star wars`);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./Loader.scss\";\r\n\r\nexport default class Loader extends React.Component {\r\n    public render() {\r\n        return (\r\n            <div className=\"ui-loader\">\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./Modal.scss\";\r\n\r\ninterface IModalProps {\r\n    onClose?: (event: React.MouseEvent) => void;\r\n}\r\n\r\nexport default class Modal extends React.Component<IModalProps> {\r\n    public render() {\r\n        return (\r\n            <div className={`ui-modal`} onClick={this.onClose.bind(this)}>\r\n                <div className=\"content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private onClose(event: React.MouseEvent): void {\r\n        if (this.props.onClose) {\r\n            this.props.onClose(event);\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./AsyncImage.scss\";\r\n\r\ninterface IAsyncImageProps {\r\n    src: string;\r\n    loader?: React.ReactElement;\r\n}\r\n\r\ninterface IAsyncImageState {\r\n    loaded: boolean;\r\n    image?: HTMLImageElement;\r\n}\r\n\r\nexport default class AsyncImage extends React.Component<IAsyncImageProps, IAsyncImageState> {\r\n    constructor(props: IAsyncImageProps) {\r\n        super(props);\r\n        this.state = {\r\n            loaded: false,\r\n        };\r\n    }\r\n\r\n    public componentDidMount() {\r\n        const image = new Image();\r\n\r\n        // When the image downloads, set \"loaded\" to true\r\n        // so it will refresh on screen\r\n        image.onload = () => {\r\n            this.setState({ loaded: true });\r\n        };\r\n\r\n        image.src = this.props.src;\r\n\r\n        this.setState({ image });\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className={`elem-asyncImage`}>\r\n                {this.getAsyncImage()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getAsyncImage(): React.ReactNode {\r\n        const img = this.state.image;\r\n\r\n        // Only display image if it has loaded\r\n        if (this.state.loaded && img) {\r\n            return <img\r\n                src={this.props.src} />;\r\n        } else if (img && !this.state.loaded && this.props.loader) {\r\n            return this.props.loader;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { QuizContext } from \"../../../Contexts/QuizContext\";\r\nimport { ICharacter } from \"../../../Interfaces/ICharacter\";\r\nimport CharacterService from \"../../../Services/CharacterService\";\r\nimport Loader from \"../../UI/Loader/Loader\";\r\nimport \"./CharacterTip.scss\";\r\n\r\ninterface ICharacterTipProps {\r\n    character: ICharacter;\r\n    imageComponent: React.ReactElement;\r\n}\r\n\r\ninterface ICharacterTipState {\r\n    specieName?: string;\r\n    planetName?: string;\r\n    filmNames?: string;\r\n    vehicleNames?: string;\r\n}\r\n\r\nexport default class CharacterTip extends React.Component<ICharacterTipProps, ICharacterTipState> {\r\n\r\n    public static contextType = QuizContext;\r\n    public context!: React.ContextType<typeof QuizContext>;\r\n\r\n    constructor(props: ICharacterTipProps) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    public componentDidMount() {\r\n        const { characterService } = this.context;\r\n        if (characterService) {\r\n            // They're all \"fire and forget\"\r\n            this.fillSpecieName(characterService);\r\n            this.fillPlanetName(characterService);\r\n            this.fillFilmNames(characterService);\r\n            this.fillVehicleNames(characterService);\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"elem-characterTip\">\r\n                <div className=\"details\">\r\n                    <div className=\"image\">\r\n                        {this.props.imageComponent}\r\n                    </div>\r\n                    <div>\r\n                        <h1>Details</h1>\r\n                        {this.state.specieName ? <p>Specie: {this.state.specieName}</p> : <div className=\"loading\">Specie: <Loader /></div>}\r\n                        <p>Height: {this.props.character.height}</p>\r\n                        <p className=\"capitalize\">Hair: {this.props.character.hair_color}</p>\r\n                        {this.state.planetName ? <p>Planet: {this.state.planetName}</p> : <div className=\"loading\">Planet: <Loader /></div>}\r\n                    </div>\r\n                </div>\r\n                {this.state.filmNames ? <p>Movies: {this.state.filmNames}</p> : <div className=\"loading\">Movies: <Loader /></div>}\r\n                {this.props.character.vehicles && this.props.character.vehicles.length > 0 ?\r\n                    this.state.vehicleNames\r\n                        ? <p>Vehicles: {this.state.vehicleNames}</p> : <div className=\"loading\">Vehicles: <Loader /></div>\r\n                    : null}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private async fillSpecieName(characterService: CharacterService) {\r\n        const specieName = await characterService.specie(this.props.character);\r\n        if (specieName) {\r\n            this.setState({ specieName });\r\n        }\r\n    }\r\n\r\n    private async fillPlanetName(characterService: CharacterService) {\r\n        const planetName = await characterService.planet(this.props.character);\r\n        if (planetName) {\r\n            this.setState({ planetName });\r\n        }\r\n    }\r\n\r\n    private async fillFilmNames(characterService: CharacterService) {\r\n        const filmNames = await characterService.films(this.props.character);\r\n        if (filmNames) {\r\n            this.setState({ filmNames });\r\n        }\r\n    }\r\n\r\n    private async fillVehicleNames(characterService: CharacterService) {\r\n        const vehicleNames = await characterService.vehicles(this.props.character);\r\n        if (vehicleNames) {\r\n            this.setState({ vehicleNames });\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { QuizContext } from \"../../../Contexts/QuizContext\";\r\nimport { ICharacter } from \"../../../Interfaces/ICharacter\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport Loader from \"../../UI/Loader/Loader\";\r\nimport Modal from \"../../UI/Modal/Modal\";\r\nimport AsyncImage from \"../AsyncImage/AsyncImage\";\r\nimport CharacterTip from \"../CharacterTip/CharacterTip\";\r\nimport \"./Character.scss\";\r\n\r\ninterface ICharacterProps {\r\n    character?: ICharacter;\r\n    fake?: boolean;\r\n    correct?: boolean;\r\n    onScore: (score: number, character: ICharacter) => void;\r\n}\r\n\r\ninterface ICharacterState {\r\n    isModalOpenned: boolean;\r\n    characterImage: string;\r\n    multiplier: number;\r\n    scoreValue: number;\r\n    correct: boolean;\r\n    nameInput: string;\r\n}\r\n\r\nexport default class Character extends React.Component<ICharacterProps, ICharacterState> {\r\n\r\n    public static contextType = QuizContext;\r\n    public context!: React.ContextType<typeof QuizContext>;\r\n\r\n    constructor(props: ICharacterProps) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpenned: false,\r\n            characterImage: \"\",\r\n            multiplier: 2,\r\n            scoreValue: 5,\r\n            correct: this.props.correct ? this.props.correct : false,\r\n            nameInput: \"\",\r\n        };\r\n    }\r\n\r\n    public async componentDidMount() {\r\n        this.getImageUrl();\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className={`elem-character`}>\r\n                <div className=\"image\">\r\n                    {this.getImage(this.state.characterImage)}\r\n                </div>\r\n                <div className=\"actions\">\r\n                    <input\r\n                        className={this.state.correct ? \"correct\" : \"\"}\r\n                        placeholder=\"Character name...\"\r\n                        onChange={this.onInputChange.bind(this)}\r\n                        value={this.props.correct ? (this.props.character ? this.props.character.name : \"\") : this.state.nameInput}\r\n                        disabled={this.state.correct || this.props.fake} />\r\n                    <Button onClick={this.openTip.bind(this)} disabled={this.state.correct || this.props.fake}>...</Button>\r\n                </div>\r\n                {this.state.isModalOpenned ?\r\n                    <Modal onClose={() => this.closeTip()}>{this.getTip(this.props.character, this.state.characterImage)}</Modal> : null}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getImage(imageUrl: string) {\r\n        // Fake it until you make it =)\r\n        const fake = <div className=\"fake\"><Loader></Loader></div>;\r\n\r\n        if (imageUrl) {\r\n            return <AsyncImage src={imageUrl} loader={fake} />;\r\n        } else {\r\n            return fake;\r\n        }\r\n    }\r\n\r\n    private getTip(character: ICharacter | undefined, imageUrl: string): React.ReactNode {\r\n        if (character) {\r\n            return <CharacterTip character={character} imageComponent={this.getImage(imageUrl)} />;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private openTip() {\r\n        this.setState({ isModalOpenned: true, multiplier: 1 });\r\n    }\r\n\r\n    private closeTip() {\r\n        this.setState({ isModalOpenned: false });\r\n    }\r\n\r\n    private onInputChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        // Cannot score twice\r\n        if (event && !this.state.correct) {\r\n            const target = event.target;\r\n            if (target) {\r\n                // If nothing is undefined\r\n                if (target.value && this.props.character && this.props.character.name) {\r\n                    // I don't actually check if the text is EXACTLY like the other, just a bit similar\r\n                    const processString = (str: string) => str.trim().toLocaleLowerCase().replace(\"-\", \"\").replace(\" \", \"\");\r\n                    // If value is the same as the name\r\n                    if (processString(target.value) === processString(this.props.character.name)) {\r\n                        this.onScore();\r\n                    }\r\n                }\r\n                this.setState({ nameInput: target.value });\r\n            }\r\n        }\r\n    }\r\n\r\n    private onScore() {\r\n        if (this.props.onScore && this.props.character) {\r\n            const { multiplier, scoreValue } = this.state;\r\n            this.props.onScore(multiplier * scoreValue, this.props.character);\r\n            this.setState({ correct: true });\r\n        }\r\n    }\r\n\r\n    private async getImageUrl() {\r\n        const { imageSearchService } = this.context;\r\n        if (imageSearchService) {\r\n            // If the character is loaded, its name exists and the image wasn't loaded yet\r\n            if (this.props.character && this.props.character.name && !this.state.characterImage) {\r\n                try {\r\n                    // Search the character image\r\n                    const splittedName = this.props.character.name.split(\" \");\r\n                    const name = splittedName.length === 1\r\n                        ? splittedName[0]\r\n                        : splittedName[0] + \" \" + splittedName[splittedName.length - 1];\r\n                    const characterImage = await imageSearchService.query(`${name} star wars`);\r\n                    if (characterImage) {\r\n                        this.setState({ characterImage });\r\n                    }\r\n                } catch (ex) {\r\n                    console.error(\"Couldn't retrieve image: \" + ex);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import moment from \"moment\";\r\nimport React from \"react\";\r\nimport \"./Counter.scss\";\r\n\r\ninterface ICounterProps {\r\n    limitInSeconds: number;\r\n    onLimit: () => void;\r\n}\r\n\r\ninterface ICounterState {\r\n    time: string;\r\n}\r\n\r\nexport default class Counter extends React.Component<ICounterProps, ICounterState> {\r\n    constructor(props: ICounterProps) {\r\n        super(props);\r\n        this.state = {\r\n            time: \"00:00\",\r\n        };\r\n    }\r\n\r\n    public componentDidMount() {\r\n        let totalSeconds = 0;\r\n        const interval = setInterval(() => {\r\n            totalSeconds = this.tickCounter(totalSeconds, interval);\r\n        }, 1000);\r\n        totalSeconds = this.tickCounter(totalSeconds, interval);\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className={`elem-counter`}>\r\n                <h1>\r\n                    <span className=\"oi\" data-glyph=\"timer\" aria-hidden=\"true\"></span>\r\n                    {this.state.time}\r\n                </h1>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private tickCounter(totalSeconds: number, interval: NodeJS.Timeout) {\r\n        const duration = moment.duration(totalSeconds, \"seconds\");\r\n        // If time has reached, stop\r\n        if (duration.asSeconds() > this.props.limitInSeconds) {\r\n            clearInterval(interval);\r\n            if (this.props.onLimit) {\r\n                this.props.onLimit();\r\n            }\r\n        } else {\r\n            // Add one second each second\r\n            totalSeconds++;\r\n            // Format the moment and update ui\r\n            const minutes = duration.minutes();\r\n            const seconds = duration.seconds();\r\n            const time = `${minutes < 10 ? \"0\" + minutes : minutes}:${seconds < 10 ? \"0\" + seconds : seconds}`;\r\n            this.setState({ time });\r\n        }\r\n        return totalSeconds;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport IRank from \"../../../Interfaces/IRank\";\r\nimport RankService from \"../../../Services/RankService\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport \"./Finished.scss\";\r\n\r\ninterface IFinishedProps {\r\n    score: number;\r\n    onSubmit: (rank: IRank) => void;\r\n}\r\n\r\ninterface IFinishedState {\r\n    rank: IRank;\r\n    validation: { valid: boolean; errors: string[]; dirty: boolean };\r\n}\r\n\r\nexport default class Finished extends React.Component<IFinishedProps, IFinishedState> {\r\n    constructor(props: IFinishedProps) {\r\n        super(props);\r\n        this.state = {\r\n            rank: {\r\n                score: this.props.score,\r\n            },\r\n            validation: {\r\n                valid: true,\r\n                errors: new Array<string>(),\r\n                dirty: false,\r\n            },\r\n        };\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"elem-finished\">\r\n                <h2>\r\n                    <Link to=\"/\">\r\n                        <span className=\"oi\" data-glyph=\"chevron-left\" aria-hidden=\"true\"></span>\r\n                        Finished!\r\n                    </Link>\r\n                </h2>\r\n                <h1 className=\"score\">\r\n                    Your score: {this.props.score}\r\n                </h1>\r\n                {this.getPreviousRank()}\r\n                <form onSubmit={this.onSubmit.bind(this)}>\r\n                    <p>Save your score:</p>\r\n                    {this.state.validation.errors.length > 0 ? this.getErrors(this.state.validation.errors) : null}\r\n                    <div className=\"field-group\">\r\n                        <label>Name: </label>\r\n                        <input\r\n                            name=\"name\"\r\n                            type=\"text\"\r\n                            value={this.state.rank.name}\r\n                            placeholder=\"Type your name here...\"\r\n                            onChange={this.updateForm.bind(this)}\r\n                        ></input>\r\n                    </div>\r\n                    <div className=\"field-group\">\r\n                        <label>Email: </label>\r\n                        <input\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            placeholder=\"Type your email here...\"\r\n                            value={this.state.rank.email}\r\n                            onChange={this.updateForm.bind(this)}\r\n                        ></input>\r\n                    </div>\r\n                    <div className=\"actions\">\r\n                        <Button type={\"submit\"} disabled={!this.state.validation.valid && this.state.validation.dirty}>Save</Button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n    private getPreviousRank(): React.ReactNode {\r\n        const rank = RankService.getPreviousRank();\r\n        if (rank) {\r\n            return (<h4 className=\"score\">Previous score: {rank.score} - {rank.name}</h4>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    private getErrors(errors: string[]): React.ReactNode {\r\n        const errorElements = () => errors.map((error, key) => <p key={key}>{error}</p>);\r\n        return (\r\n            <div className=\"formErrors\">\r\n                {errorElements()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private updateForm(e: React.ChangeEvent<HTMLInputElement>) {\r\n        const target = e.target;\r\n        const name = target.name;\r\n\r\n        const rank = { ...this.state.rank, [name]: target.value };\r\n\r\n        this.setState({\r\n            rank,\r\n            validation: this.validate(rank, this.state.validation),\r\n        });\r\n    }\r\n    private validate(rank: IRank, validation: { valid: boolean; errors: string[]; dirty: boolean })\r\n        : { valid: boolean; errors: string[]; dirty: boolean; } {\r\n        validation.dirty = true;\r\n        validation.valid = true;\r\n        validation.errors = new Array<string>();\r\n\r\n        if (!rank.name || rank.name.length < 3) {\r\n            validation.valid = false;\r\n            validation.errors.push(\"Name must have at least 3 characters\");\r\n        }\r\n\r\n        if (!rank.email || !rank.email.match(\"@\")) {\r\n            validation.valid = false;\r\n            validation.errors.push(\"Field email doesn't contain an email\");\r\n        }\r\n\r\n        if (!rank.email || rank.email.length < 3) {\r\n            validation.valid = false;\r\n            validation.errors.push(\"Email must have at least 3 characters\");\r\n        }\r\n\r\n        return validation;\r\n    }\r\n\r\n    private onSubmit(e: React.FormEvent<HTMLFormElement>) {\r\n        e.preventDefault();\r\n        if (this.props.onSubmit && this.state.validation.valid && this.state.validation.dirty) {\r\n            this.props.onSubmit(this.state.rank);\r\n        } else if (!this.state.validation.dirty) {\r\n            const validation = this.state.validation;\r\n            validation.errors.push(\"You must fill the form\");\r\n            this.setState({ validation });\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { QuizContext } from \"../../../Contexts/QuizContext\";\r\nimport { ICharacter } from \"../../../Interfaces/ICharacter\";\r\nimport IRank from \"../../../Interfaces/IRank\";\r\nimport RankService from \"../../../Services/RankService\";\r\nimport Character from \"../../Elements/Character/Character\";\r\nimport Counter from \"../../Elements/Counter/Counter\";\r\nimport Finished from \"../../Elements/Finished/Finished\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport Header from \"../../UI/Header/Header\";\r\nimport Modal from \"../../UI/Modal/Modal\";\r\nimport { countdownLimitInSeconds } from \"./../../../Config.json\";\r\nimport \"./Quiz.scss\";\r\n\r\ninterface IQuizProps {\r\n    history?: any;\r\n}\r\n\r\ninterface IQuizState {\r\n    characters?: ICharacter[];\r\n    correctCharacters: string[];\r\n    previousPage?: boolean;\r\n    nextPage?: boolean;\r\n    currentPage: number;\r\n    totalScore: number;\r\n    finished: boolean;\r\n}\r\n\r\nexport default class Quiz extends React.Component<IQuizProps, IQuizState> {\r\n    public static contextType = QuizContext;\r\n    public context!: React.ContextType<typeof QuizContext>;\r\n\r\n    constructor(props: IQuizProps) {\r\n        super(props);\r\n        this.state = {\r\n            characters: undefined,\r\n            correctCharacters: new Array<string>(),\r\n            currentPage: 0,\r\n            totalScore: 0,\r\n            finished: false,\r\n        };\r\n    }\r\n\r\n    public async componentDidMount() {\r\n        this.loadPage(this.state.currentPage);\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className={`elem-quiz`}>\r\n                <div className=\"top\">\r\n                    <Link to=\"/\">\r\n                        <Header />\r\n                    </Link>\r\n                    <div className=\"scoring\">\r\n                        <h1>\r\n                            <span className=\"oi\" data-glyph=\"star\" aria-hidden=\"true\"></span>\r\n                            {this.state.totalScore}\r\n                        </h1>\r\n                        <Counter limitInSeconds={countdownLimitInSeconds} onLimit={this.timerFinished.bind(this)} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"actions\">\r\n                    <Button\r\n                        onClick={this.previousPage.bind(this)}\r\n                        disabled={!this.state.previousPage}>\r\n                        <span>\r\n                            <span className=\"oi\" data-glyph=\"chevron-left\" aria-hidden=\"true\"></span>\r\n                            Previous page\r\n                        </span>\r\n                    </Button>\r\n                    <Button\r\n                        onClick={this.nextPage.bind(this)}\r\n                        disabled={!this.state.nextPage}>\r\n                        <span>\r\n                            Next page\r\n                            <span className=\"oi\" data-glyph=\"chevron-right\" aria-hidden=\"true\"></span>\r\n                        </span>\r\n                    </Button>\r\n                </div>\r\n                <div className=\"cards\">\r\n                    {this.getCharacters(this.state.characters)}\r\n                </div>\r\n                {this.state.finished ?\r\n                    <Modal>\r\n                        <Finished score={this.state.totalScore} onSubmit={this.rankSubmit.bind(this)} />\r\n                    </Modal> : null}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getCharacters(characters: ICharacter[] | undefined): React.ReactNode {\r\n        const charElement = (fake: boolean, char: ICharacter | undefined, key: string) => {\r\n            return <Character\r\n                character={char}\r\n                fake={fake}\r\n                key={key}\r\n                correct={this.state.correctCharacters.some((x) => char !== undefined && x === char.name)}\r\n                onScore={this.onCorrectName.bind(this)} />;\r\n        };\r\n\r\n        // Fake it until you make it =)\r\n        // Only show \"real\" characters when they're loaded\r\n        if (characters && characters.length > 0) {\r\n            return characters.map((char, index) =>\r\n                charElement(false, char, char ? (char.name ? char.name.replace(\" \", \"\") : index.toString()) : index.toString()));\r\n        } else {\r\n            // Creates an empty array, using the spread operator to fill items with \"undefined\"\r\n            return [...new Array(10)].map((char, index) => charElement(true, char, index.toString()));\r\n        }\r\n    }\r\n\r\n    private async nextPage() {\r\n        if (this.state.nextPage) {\r\n            this.loadPage(this.state.currentPage + 1);\r\n        }\r\n    }\r\n\r\n    private async previousPage() {\r\n        if (this.state.previousPage) {\r\n            this.loadPage(this.state.currentPage - 1);\r\n        }\r\n    }\r\n\r\n    private async loadPage(page: number): Promise<void> {\r\n        const { characterService } = this.context;\r\n        if (characterService) {\r\n            try {\r\n                const { characters, previousPage, nextPage } = await characterService.characters(page);\r\n                this.setState({ characters, previousPage, nextPage, currentPage: page });\r\n            } catch {\r\n                console.error(\"Couldn't retrieve characters\");\r\n            }\r\n        }\r\n    }\r\n\r\n    private onCorrectName(score: number, character: ICharacter): void {\r\n        if (!this.state.finished && character.name) {\r\n            const { correctCharacters } = this.state;\r\n            correctCharacters.push(character.name);\r\n            this.setState({ totalScore: this.state.totalScore + score, correctCharacters });\r\n        }\r\n    }\r\n\r\n    private timerFinished(): void {\r\n        this.setState({ finished: true });\r\n    }\r\n\r\n    private rankSubmit(rank: IRank): void {\r\n        RankService.insertRank(rank);\r\n        if (this.props.history) {\r\n            this.props.history.push(\"/\");\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport \"./AssisrStarQuiz.scss\";\r\nimport Menu from \"./Components/Pages/Menu/Menu\";\r\nimport Quiz from \"./Components/Pages/Quiz/Quiz\";\r\nimport { IQuizContext, quiz, QuizContext } from \"./Contexts/QuizContext\";\r\n\r\ninterface IAssisrStarQuizProps {\r\n}\r\n\r\ninterface IAssisrStarQuizState {\r\n    quizContext: IQuizContext;\r\n}\r\n\r\nexport default class AssisrStarQuiz extends React.Component<IAssisrStarQuizProps, IAssisrStarQuizState> {\r\n    constructor(props: IAssisrStarQuizProps) {\r\n        super(props);\r\n        this.state = {\r\n            quizContext: quiz,\r\n        };\r\n    }\r\n\r\n    public componentDidMount() {\r\n        const audio = (document.getElementById(\"sound\") as HTMLAudioElement);\r\n        if (audio) {\r\n            audio.volume = 0.07;\r\n            audio.play();\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className={`root-star-quiz`}>\r\n                <QuizContext.Provider value={this.state.quizContext}>\r\n                    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n                        <Route path=\"/\" exact component={Menu} />\r\n                        <Route path=\"/quiz/\" component={Quiz} />\r\n                    </BrowserRouter>\r\n                </QuizContext.Provider>\r\n                <audio autoPlay loop id=\"sound\">\r\n                    <source src=\"./static/sound/darth.mp3\" type=\"audio/mpeg\" />\r\n                </audio>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\nimport AssisrStarQuiz from \"./AssisrStarQuiz/AssisrStarQuiz\";\n\nclass App extends Component {\n  public render() {\n    return (\n      <React.Fragment>\n        <AssisrStarQuiz />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}